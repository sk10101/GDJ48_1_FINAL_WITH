<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.with.board.dao.MealDAO">
	 <update id="endUpdate">
	<![CDATA[
		UPDATE board_common_column 
			SET recruit_end = 1 WHERE deadline <= now()
	]]> 
	</update> 

	<select id="mealDetail" parameterType="String" resultType="board">
		SELECT bcc.board_idx
		,subject
		,appoint_place
		,member_id
		,write_date
		,DATE_FORMAT(deadline,'%Y-%m-%d %H:%i') as deadline
		,hit
		,member_cnt
		,recruit_end
		,(SELECT COUNT(pt_idx) FROM participant p WHERE bcc.board_idx = p.board_idx AND p.hide = 0) as partNo
		,gender
		,content
		,appoint_coords_lat
		,appoint_coords_lng
		,bcc.hide
		 FROM board_common_column bcc, meal_board mb
			WHERE bcc.board_idx = #{board_idx} AND bcc.board_idx = mb.board_idx
	</select>
	
	<update id="hit" parameterType="String">
		UPDATE board_common_column SET hit = hit +1 WHERE board_idx=#{board_idx}
	</update>
	
	
			
	<insert id="writeBcc" parameterType="board"> 
		INSERT INTO board_common_column (member_id, category_id, subject, content, deadline, appoint_place, appoint_coords_lat, appoint_coords_lng, gender, member_cnt)
			VALUES(#{member_id}, '밥게시판', #{subject}, #{content}, DATE_FORMAT(#{deadline},'%Y-%m-%d %H:%i'), #{appoint_place}, #{appoint_coords_lat}, #{appoint_coords_lng}, #{gender}, #{member_cnt})
	</insert>
	
	<select id="getBoardIdx" resultType="int" parameterType="board">
		SELECT board_idx FROM board_common_column
			WHERE member_id = #{member_id} AND subject = #{subject} AND content = #{content} AND appoint_place = #{appoint_place}
	</select>
	
	<insert id="writeMeal" parameterType="board">
		INSERT INTO meal_board (board_idx) VALUES (#{board_idx})
	</insert>

	<insert id="mealFileWrite" parameterType="photo"> 
		INSERT INTO photo(oriFileName, newFileName, board_idx, category_id)
		VALUES(#{param1},#{param2},#{param3},#{param4})
	</insert>
	
	<select id="mealPhotoList" resultType="photo">
		SELECT * FROM photo WHERE board_idx = #{param1} and category_id = #{param2}
	</select>
	
	<select id="allCount" resultType="board" parameterType="hashmap">
	 	SELECT board_idx FROM board_common_column
			WHERE category_id = '밥게시판'
				<if test="word != null and word != ''">
					<choose>
						<when test="option.equals('제목')">
							AND subject LIKE CONCAT('%',#{word},'%')
						</when>
						<when test="option.equals('약속장소')">
							AND appoint_place LIKE CONCAT('%',#{word},'%')
						</when>
						<when test="option.equals('작성자')">
							AND member_id LIKE CONCAT('%',#{word},'%')
						</when>
						<otherwise>
						</otherwise>
					</choose>
				</if>
	</select>
	
	<select id="mealList" resultType="board" parameterType="hashmap">
		SELECT 
	bcc.board_idx,
	bcc.member_id,
	hit,
	write_date,
	subject,
	DATE_FORMAT(bcc.deadline,'%Y-%m-%d %H:%i') as deadline,
	appoint_place,
	(member_cnt + 1) as member_cnt,
	recruit_end,
	bcc.hide,
	(SELECT COUNT(pt_idx) FROM participant p WHERE bcc.board_idx = p.board_idx AND p.hide = 0) as partNo
	FROM
	board_common_column bcc,
	meal_board mb,
	member m
	WHERE
	bcc.board_idx = mb.board_idx AND
	bcc.hide = 0 AND
	category_id = '밥게시판' AND
	m.member_id = bcc.member_id AND
	m.university_idx = (SELECT university_idx FROM member WHERE member_id  = #{loginId})
				<if test="word != null and word != ''">
					<choose>
						<when test="option.equals('제목')">
							AND subject LIKE CONCAT('%',#{word},'%')
						</when>
						<when test="option.equals('약속장소')">
							AND appoint_place LIKE CONCAT('%',#{word},'%')
						</when>
						<when test="option.equals('작성자')">
							AND member_id LIKE CONCAT('%',#{word},'%')
						</when>
						<otherwise>
						</otherwise>
					</choose>
				</if>
				ORDER BY bcc.board_idx DESC LIMIT #{cnt} OFFSET #{offset}
	</select>
	
	<select id="getUniversityAddr" parameterType="String" resultType="member">
		SELECT u.university_addr,u.university_name, m.university_idx FROM university u, member m
			WHERE m.university_idx = u.university_idx AND member_id = #{loginId}
	</select>
	
	
	<insert id="mealApply" 
		parameterType="board">
		INSERT INTO apply (board_idx, member_id)
			VALUES(#{param2}, #{param1})
	</insert>
	
	<insert id="partMeal">
		INSERT INTO participant (member_id, board_idx)
			VALUES(#{param1},#{param2})
	</insert>
		
	<select id="partList" parameterType="String" resultType="board">
		SELECT p.member_id, m.gender, a.investment, m.phone
			,(SELECT COUNT(assess_idx) FROM manner_assess ma WHERE assessor = #{param2} AND ma.board_idx = #{param1} and ma.member_id = p.member_id) as assessNo
			 FROM participant p, member m, apply a
				WHERE p.board_idx = #{param1} AND a.board_idx = p.board_idx AND status = '수락'
				AND a.member_id = p.member_id AND p.hide = 0 AND p.member_id = m.member_id
					ORDER BY pt_idx ASC
	</select>
	
	<select id="mealCount" resultType="int">
	SELECT count(*) FROM participant WHERE board_idx = #{param1} and hide = 0
	</select>
	
	<select id="mealPhone" resultType="string">
	SELECT phone FROM member WHERE member_id = #{param1}
	</select>
	
	
 	
 	<!-- 방장의 정보만 가져와서 따로 출력 -->
	<select id="partMaster" parameterType="String" resultType="member">
	SELECT member_id, gender, phone FROM member
		WHERE member_id = #{member_id}
	</select>
 	
	<select id="partMemberChk" resultType="int">
	SELECT COUNT(pt_idx) FROM participant
		WHERE member_id = #{param1} AND hide = 0 AND board_idx = #{param2}
	</select>
	
	<update id="mealBan">
	UPDATE participant SET hide = 1
		WHERE member_id = #{param1} AND board_idx = #{param2}
	</update>

	<insert id="putKind" parameterType="hashmap">
		INSERT INTO manner_assess(member_id, category_id, board_idx, assessor, manner_score) 
		VALUES(#{member_id}, '친절함', #{board_idx}, #{loginId}, #{kind})
	</insert>
	
	<insert id="putResponse" parameterType="hashmap">
		INSERT INTO manner_assess(member_id, category_id, board_idx, assessor, manner_score) 
		VALUES(#{member_id}, '응답속도', #{board_idx}, #{loginId}, #{response})
	</insert>
	
	<insert id="putTime" parameterType="hashmap">
		INSERT INTO manner_assess(member_id, category_id, board_idx, assessor, manner_score) 
		VALUES(#{member_id}, '시간약속', #{board_idx}, #{loginId}, #{time})
	</insert>
	
	<select id="isApplied" resultType="int">
			SELECT COUNT(apply_idx) FROM apply
				WHERE member_id = #{param1} AND board_idx = #{param2} AND status IN('대기중','수락')
	</select>
		
	<select id="isRejected" resultType="int">
			SELECT COUNT(apply_idx) FROM apply
				WHERE member_id = #{param1} AND board_idx = #{param2} AND status = '거절'
	</select>
		
	<select id="isBanned" resultType="int">
			SELECT COUNT(pt_idx) FROM participant
				WHERE member_id = #{param1} AND board_idx = #{param2} AND hide=1
	</select>
		
	<select id="getGender" resultType="String">
		SELECT gender FROM member
				WHERE member_id = #{param1}
	</select>
	
</mapper>


